{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kOAceA,EAZF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GAC3B,OACG,sBAAKC,UAAU,sDAAf,UACD,qBAAKC,IAAI,UAASC,IAAG,+BAA0BH,EAA1B,cACtB,gCACE,6BAAKF,IACL,4BAAIC,WCcOK,EAnBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACjB,OACD,8BAEEA,EAAOC,KAAI,SAACC,EAAMC,GACnB,OACE,cAAC,EAAD,CAEER,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCKIC,EAbG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aACjC,OACE,qBAAKV,UAAU,MAAf,SACD,uBACEA,UAAU,mCACVW,KAAK,SACLC,YAAY,gBACNC,SAAUH,OCCLI,EARA,SAACC,GACf,OACK,qBAAKC,MAAO,CAAEC,UAAW,SAAUC,OAAQ,iBAAkBC,OAAQ,SAArE,SACGJ,EAAMK,YCkBAC,E,kDApBd,WAAYN,GAAQ,IAAD,8BAClB,cAAMA,IACDO,MAAQ,CACZC,UAAU,GAHO,E,8DAOFC,EAAOC,GACxBC,KAAKC,SAAS,CAAEJ,UAAU,M,+BAKzB,OAAIG,KAAKJ,MAAMC,SACP,0DAEDG,KAAKX,MAAMK,a,GAjBOQ,aC6CZC,G,wDAvCd,aAAe,IAAD,8BACb,gBAaDC,eAAiB,SAACC,GACjB,EAAKJ,SAAS,CAAElB,YAAasB,EAAMC,OAAOC,SAb1C,EAAKX,MAAQ,CACXlB,OAAQ,GACLK,YAAa,IAJL,E,gEAQO,IAAD,OACnByB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACxBF,MAAK,SAAAG,GAAK,OAAI,EAAKX,SAAS,CAAEvB,OAAQkC,S,+BAO/B,IAAD,EACuBZ,KAAKJ,MAA5BlB,EADA,EACAA,OAAQK,EADR,EACQA,YACT8B,EAAiBnC,EAAOoC,QAAQ,SAAAC,GACvC,OAAOA,EAAM5C,KAAK6C,cAAcC,SAASlC,EAAYiC,kBAEpD,OAAQtC,EAAOwC,OAGb,sBAAK5C,UAAU,KAAf,UACD,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACA,cAAC,EAAD,UACE,cAAC,EAAD,CAAU1B,OAAQmC,WAPlB,oBAAIvC,UAAU,KAAd,yB,GAzBY4B,cCKHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACR,cAAC,EAAD,IACCC,SAASC,eAAe,SAK1BX,M","file":"static/js/main.5133f525.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({name, email, id}) => {\r\n\treturn(\r\n\t   <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n\t\t <img alt='robots 'src={`https://robohash.org/${id}?200x200`} />\r\n\t\t<div>\r\n\t\t  <h2>{name}</h2>\r\n\t\t  <p>{email}</p>\r\n\t\t</div>\r\n\t  </div>\r\n\t);\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots}) => {\r\n  return (\r\n\t<div>\r\n\t{\r\n\t  robots.map((user, i) => {\r\n\t\treturn (\r\n\t\t  <Card\r\n\t\t    key={i} \r\n\t\t    id={robots[i].id} \r\n\t\t    name={robots[i].name} \r\n\t\t    email={robots[i].email}\r\n\t\t    />\r\n\t    );\r\n\t  })\r\n\t}\r\n\t</div>\r\n  );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({ searchfield, searchChange }) => {\r\n\treturn (\r\n\t  <div className='pa2'>\r\n\t\t<input \r\n\t\t  className='pa3 ba b--green bg-lightest-blue'\r\n\t\t  type='search' \r\n\t\t  placeholder='search robots'\r\n          onChange={searchChange}\r\n\t\t />\r\n\t  </div>\r\n\t);\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n\treturn (\r\n      <div style={{ overflowY: 'scroll', border: 'px solid black', height: '928px'}} >\r\n        {props.children}\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\thasError: false\r\n\t\t}\r\n\t}\r\n\r\ncomponentDidCatch(error, info){\r\n\tthis.setState({ hasError: true})\r\n\r\n}\r\n\r\n\trender () {\r\n\t\tif (this.state.hasError) {\r\n\t\t\treturn <h1>Ihhhh isso ta legal nao </h1>\r\n\t\t}\r\n\t\treturn this.props.children\r\n\t}\r\n}\r\n\r\nexport default ErrorBoundry ;","import React, {Component} from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t\tthis.state = {\r\n\t\t  robots: [],\r\n\t      searchfield: ''\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t.then(response=> response.json())\r\n\t\t .then(users => this.setState({ robots: users}));\r\n\t}\r\n\r\n\tonSearchChange = (event) => {\r\n\t\tthis.setState({ searchfield: event.target.value })\r\n\t}\r\n\r\n\trender() {\r\n\t  const {robots, searchfield} = this.state;\r\n\t  const filteredRobots = robots.filter( robot => {\r\n\t\treturn robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n\t  })\r\n\t  return !robots.length ?\r\n      <h1 className='tc'>Loading</h1> :\r\n\t  (\r\n\t    <div className='tc'>\r\n\t\t  <h1 className='f1'>RoboFriends</h1>\r\n\t\t  <SearchBox searchChange={this.onSearchChange}/>\r\n\t\t  <Scroll>\r\n\t\t  <ErrorBoundry>\r\n\t\t    <CardList robots={filteredRobots}/>\r\n          </ErrorBoundry>\r\n          </Scroll>\r\n\t    </div>\t\r\n\t);\r\n\t} \r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n\t<App />\n, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}